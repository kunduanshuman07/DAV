# -*- coding: utf-8 -*-
"""Simple Linear Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MjYSktjNjqcX-lChvU1dI45osQML7vMX

# Simple Linear Regression

## Importing the Libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""## Importing the Dataset"""

dataset = pd.read_csv('Salary_Data.csv')
X = dataset.iloc[:,:-1].values
y = dataset.iloc[:,-1].values

print(X)

print(y)

"""## Splitting the dataset into training and test sets"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

"""## Training the Simple Linear Regression Model on training sets"""

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

"""## Predicting the test set results"""

y_pred = regressor.predict(X_test)
print(y_pred)

"""## Visualizing the training set results"""

plt.scatter(X_train,y_train, color = 'red')
plt.plot(X_train, regressor.predict(X_train), color = 'blue')
plt.title('Salary vs Experience (Training Set)')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.show()

"""## Visualizing the test set results"""

plt.scatter(X_test,y_test, color = 'red')
plt.plot(X_train, regressor.predict(X_train), color = 'blue')
plt.title('Salary vs Experience (Test Set)')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.show()

"""## Questions

### 1. How to predict for a single value variable (Salary for 12 years of experience)
"""

print(regressor.predict([[12]]))

"""### Write the actual equation for the model implemented."""

coefficient = regressor.coef_
intercept = regressor.intercept_

print(coefficient)

print(intercept)

"""The Equation for the Simple Regression Model trained on the Salary Dataset:
y = 26781 + 9313*X
"""
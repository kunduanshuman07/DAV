# -*- coding: utf-8 -*-
"""Hierarchical Clustering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FkUQCz16JQ1HjNgPGQ0kNGclhYxuRYZ2

# Hierarchical Clustering

## Importing the Libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""## Importing the Dataset"""

dataset = pd.read_csv('Mall_Customers.csv')
X = dataset.iloc[:,[3,4]].values

print(X)

"""## Using the Dendrograms method to find out the optimal number of clusters"""

import scipy.cluster.hierarchy as sch
dendrogram = sch.dendrogram(sch.linkage(X, method='ward'))
plt.title("Dendrogram")
plt.xlabel('Customers')
plt.ylabel('Euclidean Distance')
plt.show()

"""## Training the Model on the whole dataset"""

from sklearn.cluster import AgglomerativeClustering
hc = AgglomerativeClustering(n_clusters=5, affinity='euclidean', linkage='ward')
y_hc = hc.fit_predict(X)
print(y_hc)

"""## Visualizing the clusters"""

plt.scatter(X[y_hc==0,0],X[y_hc==0,1], s=100, c='red', label='Cluster 1')
plt.scatter(X[y_hc==1,0],X[y_hc==1,1], s=100, c='blue', label='Cluster 2')
plt.scatter(X[y_hc==2,0],X[y_hc==2,1], s=100, c='green', label='Cluster 3')
plt.scatter(X[y_hc==3,0],X[y_hc==3,1], s=100, c='cyan', label='Cluster 4')
plt.scatter(X[y_hc==4,0],X[y_hc==4,1], s=100, c='magenta', label='Cluster 5')
plt.title('Customers Clusters')
plt.legend()
plt.xlabel('Annual Income')
plt.ylabel('Spending Score')
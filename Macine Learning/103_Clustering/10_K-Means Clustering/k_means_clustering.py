# -*- coding: utf-8 -*-
"""K-Means Clustering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yLj-IigIFJrm9Ja00fHcZAxDKB55H2_6

# K-Means Clustering

## Importing the Libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""## Importing the Dataset"""

dataset = pd.read_csv('Mall_Customers.csv')
X = dataset.iloc[:,[3,4]].values

print(X)

"""## Using the elbow method to find out the optimal number of clusters"""

from sklearn.cluster import KMeans
wcss = []
for i in range(1,11):
  kmeans = KMeans(n_clusters=i, init = 'k-means++', random_state=42)
  kmeans.fit(X)
  wcss.append(kmeans.inertia_)
plt.plot(range(1,11), wcss)
plt.title("Elbow Method to predict optimal no. of clusters")
plt.xlabel('No. of Clusters')
plt.ylabel('WCSS')
plt.show();

"""## Training the Model on the whole dataset"""

kmeans = KMeans(n_clusters=5, init='k-means++', random_state=42)
y_kmeans = kmeans.fit_predict(X)
print(y_kmeans)

"""## Visualizing the clusters"""

plt.scatter(X[y_kmeans==0,0],X[y_kmeans==0,1], s = 100, c = 'red', label = 'Cluster 1')
plt.scatter(X[y_kmeans==1,0],X[y_kmeans==1,1], s = 100, c = 'green', label = 'Cluster 2')
plt.scatter(X[y_kmeans==2,0],X[y_kmeans==2,1], s = 100, c = 'blue', label = 'Cluster 3')
plt.scatter(X[y_kmeans==3,0],X[y_kmeans==3,1], s = 100, c = 'magenta', label = 'Cluster 4')
plt.scatter(X[y_kmeans==4,0],X[y_kmeans==4,1], s = 100, c = 'cyan', label = 'Cluster 5')
plt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1], s = 300, c='yellow', label='Centroids')
plt.legend()
plt.title('Annual Income vs Spending Score Clusters')
plt.xlabel('Annual Income')
plt.ylabel('Spending Score')
plt.show()
# -*- coding: utf-8 -*-
"""Polynomial Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tiq-yGo93Nczxzz98N8VTqkZ1LfxGVne

# Polynomial Linear Regression

## Importing the libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""## Importing the Dataset"""

dataset = pd.read_csv('Position_Salaries.csv')
X = dataset.iloc[:,1:-1].values
y = dataset.iloc[:,-1].values

print(X)

print(y)

"""## Training the Linear Regression Model on the whole Dataset (for compairing with Polynomial Regression Model)"""

from sklearn.linear_model import LinearRegression
lin_reg = LinearRegression()
lin_reg.fit(X, y)

"""## Training the Polynomial Regression Model on the whole Dataset

### Building the degree 2 dataset (we can set any degree because n is the hihghest degree, 2 is used here for easy understaning)
"""

from sklearn.preprocessing import PolynomialFeatures
poly_reg = PolynomialFeatures(degree = 2)
X_poly = poly_reg.fit_transform(X)

print(X_poly)

"""### Forming the actual Linear Regression Model based the Polynomial Features Dataset"""

lin_reg_2 = LinearRegression()
lin_reg_2.fit(X_poly, y)

"""## Visualizing the Linear Regression Results"""

plt.scatter(X, y, color='red')
plt.plot(X, lin_reg.predict(X), color='blue')
plt.title('Salary vs Truth (Linear Regression)')
plt.xlabel('Level')
plt.ylabel('Salary')
plt.show()

"""## Visualizing the Polynomial Regression Model"""

plt.scatter(X, y, color='red')
plt.plot(X, lin_reg_2.predict(poly_reg.fit_transform(X)), color='blue')
plt.title('Salary vs Truth (Polynomial Regression)')
plt.xlabel('Level')
plt.ylabel('Salary')
plt.show()

"""## Predicting the results

### Using Linear Regression Model
"""

print(lin_reg.predict([[6.5]]))

"""### Using the Polynomial Regression Model"""

print(lin_reg_2.predict(poly_reg.fit_transform([[6.5]])))